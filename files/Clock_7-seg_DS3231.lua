local a=0;local b=0x68;local c={"sec","min","hour","day","date","month","year"}local function d(e)return(e/16-e/16%1)*10+e%16 end;local function f(e)if e==nil then return 0 end;return(e/10-e/10%1)*16+e%10 end;local function g(h,i)i2c.start(a)i2c.address(a,b,i2c.TRANSMITTER)i2c.write(a,h)i2c.stop(a)i2c.start(a)i2c.address(a,b,i2c.RECEIVER)local j=i2c.read(0,i)i2c.stop(a)return j end;local function k(l)i2c.start(a)i2c.address(a,b,i2c.TRANSMITTER)i2c.write(a,0x00)for m,e in ipairs(c)do i2c.write(a,f(l[m]))end;i2c.stop(a)return"true"end;local function n()local j=g(0x00,7)local o={}for m=1,7 do o[c[m]]=d(tonumber(string.byte(j,m)))end;return o end;local function p()local j=g(0x11,2)return string.byte(j,1)end;local function q(c)_DS3231={}if not _I2C then i2c.setup(a,c.sda,c.scl,i2c.SLOW)end;return true end;return function(r)local s=false;if r.init then s=q(r.init)end;if _DS3231 then if r.get then s=n()end;if r.getStr then c=n()s=string.format("20%02d-%02d-%02dT%02d:%02d",c["year"],c["month"],c["date"],c["hour"],c["min"])end;if r.temp then s=p()end;if r.set then s=k(r.set)end end;return s end
